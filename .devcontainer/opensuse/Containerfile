# Build stage with Spack pre-installed and ready to be used
FROM docker.io/opensuse/leap:15.5 AS builder

RUN zypper ref && zypper -n install --no-recommends \
      curl git python311 python311-pip python311-devel \
      gcc14 gcc14-c++ xz patch gpg2 patchelf tar gzip unzip bzip2 \
      glibc-devel-static libxcrypt-devel-static zlib-devel-static \
      wget autoconf automake zlib-devel libcurl-devel cmake3 \
      libxml2-devel libxslt-devel \
  && update-alternatives --set python3 /usr/bin/python3.11 || true \
  && python3.11 -m pip install --upgrade "pip<25" setuptools wheel \
  && python3.11 -m pip install clingo gcovr

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 10 \
  && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 10

ENV CC=/usr/bin/gcc-14
ENV CXX=/usr/bin/g++-14

# Build Boost (static libs only) **without ICU**
ARG BOOST_VER=1.75.0
ARG BOOST_U=1_75_0
RUN set -eux; \
  cd /tmp; \
  curl -L -o boost.tar.bz2 https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VER}/source/boost_${BOOST_U}.tar.bz2; \
  tar -xjf boost.tar.bz2; \
  cd boost_${BOOST_U}; \
  ./bootstrap.sh --prefix=/opt/static --without-icu; \
  ./b2 -j"$(nproc)" \
      variant=release link=static runtime-link=shared threading=multi \
      --without-icu \
      --with-filesystem --with-program_options --with-regex --with-system \
      install; \
  rm -rf /tmp/boost*

# Make CMake prefer our static Boost
ENV CMAKE_PREFIX_PATH=/opt/static
ENV Boost_ROOT=/opt/static

# Install and configure Spack
ENV SPACK_ROOT=/opt/spack
ENV PATH=${PATH}:${SPACK_ROOT}/bin
RUN git clone --depth 1 --branch v1.0.0 https://github.com/spack/spack.git ${SPACK_ROOT} \
    && . ${SPACK_ROOT}/share/spack/setup-env.sh && spack external find

# What we want to install and how we want to install it
# is specified in a manifest file (spack.yaml)
COPY spack.yaml /opt/spack-environment/spack.yaml

# Install the software, remove unnecessary deps
RUN cd /opt/spack-environment && . ${SPACK_ROOT}/share/spack/setup-env.sh \
    && spack env activate . && spack install --fail-fast && spack gc -y

# Strip all the Spack binaries
RUN find -L /opt/views/view/* -type f -exec readlink -f '{}' \; | \
    xargs file -i | \
    grep 'charset=binary' | \
    grep 'x-executable\|x-archive\|x-sharedlib' | \
    awk -F: '{print $1}' | xargs strip

# Modifications to the environment that are necessary to run
RUN cd /opt/spack-environment && . ${SPACK_ROOT}/share/spack/setup-env.sh \
    && spack env activate --sh -d . > activate.sh

RUN { \
      echo '#!/bin/sh' \
      && echo '.' /opt/spack-environment/activate.sh \
      && echo 'exec "$@"'; \
    } > /entrypoint.sh \
&& chmod a+x /entrypoint.sh \
&& ln -s /opt/views/view /opt/view

ENTRYPOINT [ "/entrypoint.sh" ]
CMD [ "/bin/bash" ]

