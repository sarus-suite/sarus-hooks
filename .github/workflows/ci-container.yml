name: Build & Publish CI Container

on:
  push: {}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      ci_changed: ${{ steps.filter.outputs.ci }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Detect CI‚Äêcontainer changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ci:  
              - '.devcontainer/opensuse/Containerfile'

  build-and-push-arch:
    needs: changes
    if: ${{ needs.changes.outputs.ci_changed == 'true' }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: "linux/amd64"
          - arch: arm64
            runner: ubuntu-24.04-arm
            platform: "linux/arm64"
    runs-on: ${{ matrix.runner }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .devcontainer/opensuse
          file: .devcontainer/opensuse/Containerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/ci-runner:${{ matrix.arch }}-${{ github.sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha,scope=ci-${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=ci-${{ matrix.arch }}

  # single multi-arch
  publish:
    needs: [build-and-push-arch, changes]
    if: ${{ github.event_name != 'pull_request' && needs.changes.outputs.ci_changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/ci-runner
      SHA: ${{ github.sha }}
    steps:
      - name: setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest (with :latest and :$SHA)
        run: |
          docker buildx imagetools create \
            -t "${IMAGE}:latest" \
            -t "${IMAGE}:${SHA}" \
            "${IMAGE}:amd64-${SHA}" \
            "${IMAGE}:arm64-${SHA}"

      - name: Check manifest
        run: docker buildx imagetools inspect "${IMAGE}:${SHA}"

